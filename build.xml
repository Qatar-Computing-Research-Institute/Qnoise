<!--
  ~ Copyright (c) Qatar Computing Research Institute, 2013.
  ~ Licensed under the MIT license <http://www.opensource.org/licenses/MIT>.
  -->
<project name="Qnoise Build" default="all" basedir=".">

    <!-- Common property values -->
    <property name="project.name" value="qnoise" />

    <property name="build.root" value="out" />
    <property name="build.dir" value="${build.root}/production" />
    <property name="test.dir" value="${build.root}/test" />
    <property name="testresult.dir" value="${test.dir}/testresult" />
    <property name="vendor.dir" value="vendors" />
    <property name="qnoise.class" value="qa.qcri.qnoise.Qnoise" />

    <!-- Common used paths -->
    <path id="jar.deps">
        <fileset dir="vendors" includes="*.jar" />
    </path>

    <path id="test.deps">
        <fileset dir="${build.root}/bin" includes="*.jar" />
    </path>

    <!-- JDK 1.7 check -->
    <condition property="version1.7">
	  <or>
        <equals arg1="${ant.java.version}" arg2="1.7" />
        <equals arg1="${ant.java.version}" arg2="1.8" />
	  </or>
    </condition>

    <!-- Targets -->
    <target name="clean">
        <delete dir="${build.root}" includeemptydirs="true" />
    </target>

    <target name="all"
            description="Clean build on all the Qnoise files and creates the JAR file."
            depends="clean, compile, test, jar">
    </target>

    <target name="compile"
            description="Compile all the Qnoise components"
            depends="qnoise">
    </target>

    <target name="jar" depends="compile">
        <manifestclasspath property="qnoise.manifest"
                           jarfile="qnoise.jar">
            <classpath refid="jar.deps" />
        </manifestclasspath>

        <jar destfile="${build.root}/bin/${project.name}.jar">
            <fileset dir="${build.dir}" includes="**/*">
            </fileset>
            <manifest>
                <attribute name="Main-Class" value="${qnoise.class}" />
                <attribute name="Created-By" value="${ant.java.version}" />
                <attribute name="Class-Path" value="${qnoise.manifest}" />
            </manifest>
        </jar>

        <copy todir="${build.root}/bin">
            <fileset dir="vendors">
                <include name="*.jar" />
                <exclude name="**/*javadoc*.jar" />
            </fileset>
        </copy>
        <copy file="LICENSE" todir="${build.root}/bin" />
    </target>

    <!-- Targets per component -->
    <target name="qnoise">
        <mkdir dir="${build.dir}" />
        <fail message="JDK 1.7 required" unless="version1.7" />
        <javac includeantruntime="false"
               fork="true"
               srcdir="src"
               destdir="${build.dir}"
               classpathref="jar.deps"
               encoding="utf-8">
        </javac>
    </target>

    <target name="test" depends="compile, jar">
        <fail message="JDK 1.7 required" unless="version1.7" />
        <mkdir dir="${test.dir}" />
        <javac includeantruntime="false"
               fork="true"
               srcdir="test/src"
               destdir="${test.dir}"
               classpathref="test.deps"
               encoding="utf-8">
        </javac>
    </target>

    <!-- Doc -->
    <target name="doc">
        <mkdir dir="${build.root}/doc" />
        <javadoc
                sourcepath="src"
                classpathref="jar.deps"
                destdir="${build.root}/doc"
                header="Qnoise Javadoc"
                packagenames= "qa.qcri.qnoise"
                doctitle="Qnoise Javadoc">
        </javadoc>
    </target>

    <!-- JUnit -->
    <path id="test.classpath">
        <pathelement location="${test.dir}" />
        <fileset dir="${build.root}/bin">
            <include name="*.jar" />
        </fileset>
    </path>

    <target name="unittest" depends="qnoise, test">
        <mkdir dir="${testresult.dir}" />
        <mkdir dir="${testresult.dir}/testreports" />
        <junit printsummary="yes" haltonfailure="no" showoutput="no">
            <classpath refid="test.classpath" />
            <formatter type="plain" />
            <formatter type="xml" />

            <batchtest fork="yes" todir="${testresult.dir}">
                <fileset dir="${test.dir}">
                    <include name="**/*Test.class" />
                </fileset>
            </batchtest>
        </junit>
        <junitreport todir="${testresult.dir}/testreports">
            <fileset dir="${build.root}/testresult">
                <include name="TEST-*.xml"/>
            </fileset>
            <report todir="${testresult.dir}/testreports"/>
        </junitreport>
    </target>
</project>
